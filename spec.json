{
  "openapi": "3.0.0",
  "paths": {
    "/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["App"]
      }
    },
    "/v1/resource-types": {
      "get": {
        "operationId": "ResourceTypeController_list",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API Key for authentication",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "The search query to filter resource types by name, description, or slug",
            "schema": { "type": "string" }
          },
          {
            "name": "parentResourceTypeId",
            "required": false,
            "in": "query",
            "description": "The parent resource type ID or slug",
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "The status of the resource type",
            "schema": { "type": "string", "enum": ["active", "archived"] }
          }
        ],
        "responses": {
          "200": {
            "description": "List of resource types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTypeList_Output"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Resource Type"]
      },
      "post": {
        "operationId": "ResourceTypeController_create",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API Key for authentication",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceTypeCreateBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource type created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceType_Output" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Resource Type"]
      }
    },
    "/v1/resource-types/{resourceTypeId}": {
      "get": {
        "operationId": "ResourceTypeController_get",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API Key for authentication",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "resourceTypeId",
            "required": true,
            "in": "path",
            "description": "The ID or slug of the resource type",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource type",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResourceType_Output" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Resource Type"]
      },
      "put": {
        "operationId": "ResourceTypeController_update",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API Key for authentication",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "resourceTypeId",
            "required": true,
            "in": "path",
            "description": "The ID or slug of the resource type",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceTypeCreateBody"
              }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Resource Type"]
      },
      "delete": {
        "operationId": "ResourceTypeController_delete",
        "parameters": [
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API Key for authentication",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "resourceTypeId",
            "required": true,
            "in": "path",
            "description": "The ID or slug of the resource type",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "security": [{ "bearer": [] }],
        "tags": ["Resource Type"]
      }
    },
    "/v1/api-keys": {
      "post": {
        "operationId": "ApiKeyController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ApiKeyCreateDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create API key",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiKeyDto_Output" }
              }
            }
          }
        },
        "tags": ["API Keys"]
      },
      "get": {
        "operationId": "ApiKeyController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List API keys",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyListDto_Output"
                }
              }
            }
          }
        },
        "tags": ["API Keys"]
      }
    },
    "/v1/api-keys/{id}": {
      "get": {
        "operationId": "ApiKeyController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get API key",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiKeyDto_Output" }
              }
            }
          }
        },
        "tags": ["API Keys"]
      },
      "delete": {
        "operationId": "ApiKeyController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Delete API key" } },
        "tags": ["API Keys"]
      }
    },
    "/v1/organizations": {
      "post": {
        "operationId": "OrganizationController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrganizationCreateDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto_Output"
                }
              }
            }
          }
        },
        "summary": "Create organization",
        "tags": ["Organizations"]
      },
      "get": {
        "operationId": "OrganizationController_list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List organizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationListDto_Output"
                }
              }
            }
          }
        },
        "tags": ["Organizations"]
      }
    },
    "/v1/organizations/{id}": {
      "get": {
        "operationId": "OrganizationController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto_Output"
                }
              }
            }
          }
        },
        "tags": ["Organizations"]
      },
      "put": {
        "operationId": "OrganizationController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrganizationUpdateDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto_Output"
                }
              }
            }
          }
        },
        "tags": ["Organizations"]
      },
      "delete": {
        "operationId": "OrganizationController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "Delete organization" } },
        "tags": ["Organizations"]
      }
    }
  },
  "info": {
    "title": "Blimu API",
    "description": "The Blimu API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" },
      "apiKey": { "type": "apiKey", "in": "header", "name": "Authorization" }
    },
    "schemas": {
      "ResourceTypeList_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "description": { "type": "string" },
                "status": { "type": "string", "enum": ["ACTIVE", "ARCHIVED"] },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                }
              },
              "required": ["id", "name", "status", "createdAt", "updatedAt"],
              "additionalProperties": false
            }
          },
          "total": { "type": "number" }
        },
        "required": ["items", "total"]
      },
      "ResourceType_Output": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "status": { "type": "string", "enum": ["ACTIVE", "ARCHIVED"] },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
          }
        },
        "required": ["id", "name", "status", "createdAt", "updatedAt"]
      },
      "ResourceTypeCreateBody": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the resource type",
            "type": "string"
          },
          "key": {
            "description": "The short of the resource type, such as \"org\" or \"team\". If not provided, it will be generated from the name. Must be lowercase and contain only letters, numbers, and hyphens.",
            "type": "string",
            "pattern": "^[a-z0-9-]+$"
          },
          "description": {
            "default": "",
            "description": "The description of the resource type",
            "type": "string"
          },
          "parentResourceTypeId": {
            "description": "The ID of the parent resource type",
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "ApiKeyCreateDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 1 },
          "organizationId": { "type": "string", "minLength": 1 }
        },
        "required": ["name", "organizationId"]
      },
      "ApiKeyDto_Output": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "organizationId": { "type": "string" },
          "name": { "type": "string" },
          "key": { "type": "string" },
          "isActive": { "type": "boolean" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
          }
        },
        "required": [
          "id",
          "organizationId",
          "name",
          "key",
          "isActive",
          "createdAt",
          "updatedAt"
        ]
      },
      "ApiKeyListDto_Output": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organizationId": { "type": "string" },
                "name": { "type": "string" },
                "key": { "type": "string" },
                "isActive": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                }
              },
              "required": [
                "id",
                "organizationId",
                "name",
                "key",
                "isActive",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": false
            }
          },
          "total": { "type": "number" }
        },
        "required": ["data", "total"]
      },
      "OrganizationCreateDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 1 },
          "key": { "type": "string" }
        },
        "required": ["name"]
      },
      "OrganizationDto_Output": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
          }
        },
        "required": ["id", "name", "createdAt", "updatedAt"]
      },
      "OrganizationListDto_Output": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
                }
              },
              "required": ["id", "name", "createdAt", "updatedAt"],
              "additionalProperties": false
            }
          },
          "total": { "type": "number" }
        },
        "required": ["data", "total"]
      },
      "OrganizationUpdateDto": {
        "type": "object",
        "properties": { "name": { "type": "string", "minLength": 1 } },
        "required": ["name"]
      }
    }
  }
}
